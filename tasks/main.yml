---

- name: Install system-level requirements.
  sudo: yes
  apt: pkg={{ item }}
       state=installed
  with_items:
    - "{{ django_system_packages }}"
    - "{{ django_system_packages_extra }}"
  tags:
    - requirements

- name: Create the project directory.
  sudo: yes
  file: state=directory
        path={{ django_project_path }}
        owner={{ django_user }}
        group={{ django_user }}

- name: Pull code from git repo.
  git: repo={{ django_repo }}
       dest={{ django_project_source }}
       accept_hostkey=yes
       key_file={{ django_deploy_key }}
       version={{ django_branch }}
  when: django_deploy_key is defined
  notify: restart uwsgi
  tags:
    - git

- name: Pull code from git repo.
  git: repo={{ django_repo }}
       dest={{ django_project_source }}
       update=yes
       accept_hostkey=yes
       version={{ django_branch }}
  when: django_deploy_key is not defined
  notify: restart uwsgi
  tags:
    - git

- name: Install python requirements.
  pip: requirements={{ django_project_source }}/{{ django_requirements_file }}
       virtualenv={{ django_project_path }}
       extra_args='--exists-action=w --trusted-host pypi.mnndev.com'

- name: Configure Python PATH
  template: src=django.pth
            dest={{ django_project_path }}/lib/python2.7/site-packages/

- name: Fix source directory permissions
  file: state=directory
        path={{ django_project_path }}
        owner={{ django_user }}
        group={{ django_user }}
        recurse=yes

- name: Logging directory permissions
  sudo: yes
  file: state=directory
        path=/var/log/uwsgi
        owner={{ django_user }}
        group={{ django_user }}
        recurse=yes

- name: Syncdb
  sudo_user: "{{ django_user }}"
  django_manage: command=syncdb
                 app_path={{ django_manage_path }}
                 settings={{ django_settings_module }}
                 virtualenv={{ django_project_path }}
  environment: django_env
  when: django_syncdb

- name: Run Migrations.
  sudo_user: "{{ django_user }}"
  django_manage: command=migrate
                 app_path={{ django_manage_path }}
                 settings={{ django_settings_module }}
                 virtualenv={{ django_project_path }}
  environment: django_env
  when: django_migrate

- name: Load Fixtures.
  sudo_user: "{{ django_user }}"
  django_manage: command=loaddata
                 app_path={{ django_manage_path }}
                 settings={{ django_settings_module }}
                 virtualenv={{ django_project_path }}
                 fixtures="{{ django_fixtures | join(" ") }}"
  environment: django_env
  when: django_fixtures

- include: front_end.yml
  when: django_setup_frontend

- name: Restart uWSGI process
  file: path={{ django_uwsgi_file }} state=touch
